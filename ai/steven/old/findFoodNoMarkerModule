//searches for food by randomly walking through the map, marking its way until food was found and picked up
//REMOVED overwriting, does not overwrite marked paths anymore
//ADDED: cyclebreak
//TODO: test for register 1 in case of cycle break
//currently it does not count foehome as dangerous (simply take the corresponding functions from setDirNoDangerModule)
//REMOVED

#findFoodNoMarker{
	@begin
	call #setDirRandom
	call #safe_dir
	call #setDirUnexplored
	test 1 else @cycleDone
	call #markMovingTo
	move else @begin
	call #markMovedFrom
	call #checkFoodAndPickup
	sense here friendfood else @begin
	sense here food else @setLastFoodState
	unset 1
	return
@setLastFoodState
    set 2
    unset 1
    return
@cycleDone
    call #followMarkerToFoodModule
}

#checkFoodAndPickup{
	pickup else @return
	return
}
#markMovingTo{
	@northwest //001
	direction northwest else @northeast
	unmark 0
	mark 1
	mark 2
	return
	
	@northeast //010
	direction northeast else @east
	unmark 0
	mark 1 
	unmark 2
	return
	
	@east //011
	direction east else @southeast
	unmark 0
	mark 1
	mark 2
	return
	
	@southeast //100
	direction southeast else @southwest
	mark 0
	unmark 1
	unmark 2
	return
	
	@southwest //101
	direction southwest else @west
	mark 0
	unmark 1
	mark 2
	return
	
	@west //110,  we know here it has to be west, as everything else has been already tested
	mark 0
	mark 1
	unmark 2
	return
}

#markMovedFrom{
	@northwest //001
	direction southeast else @northeast
	unmark 3
	unmark 4
	mark 5
	return
	
	@northeast //010
	direction southwest else @east
	unmark 3
	mark 4 
	unmark 5
	return
	
	@east //011
	direction west else @southeast
	unmark 3
	mark 4
	mark 5
	return
	
	@southeast //100
	direction northwest else @southwest
	mark 3
	unmark 4
	unmark 5
	return
	
	@southwest //101
	direction northeast else @west
	mark 3
	unmark 4
	mark 5
	return
	
	@west //110,  we know here it has to be west, as everything else has been already tested
	mark 3
	mark 4
	unmark 5
	return
}

#setDirRandom{
	flip 3 else *2
	jump *5
	flip 2 else *3
	turn left
	jump *2
	turn right
	return
}

#safe_dir{
@checkForAntLion
	sense ahead antlion else *2
	turn left
	jump @checkForAntLion
@checkForFoehome
	sense ahead foehome else *2
	turn left
	jump@checkForAntLion
@checkForEnemy
    sense left foe else *1
    sense right foe else *3
    turn left
    jump @checkForAntLion
}
#setDirUnexplored{
    //starts at 001 to 111
    unset 1
    unset 4
    unset 5
@begin
    sense ahead marker 0 else @changeDir
    sense ahead marker 1 else @changeDir
    sense ahead marker 2 else @changeDir
    sense ahead marker 3 else @changeDir
    sense ahead marker 4 else @changeDir
    sense ahead marker 5 else @changeDir
    jump @return
@changeDir
    turn left
    flip 50 else @begin
    jump @cyclebreak
    jump @begin
@cycleBreak
    unset 1
}
testNumber{
    test 0 else @xx0
    test 4 else @x01
    test 5 else @011
    jump @return //111
@xx0
    test 4 else @x00
    test 5 else @010
    jump @110
@x01
    test 5 else @001
    jump @101
@x00
    test 5 else @000
    jump @100
@000
    unset 0
    unset 4
    unset 5
    jump @begin
@001
    set 0
    unset 4
    unset 5
    jump @begin
@010
    unset 0
    set 4
    unset 5
    jump @begin
@011
    set 0
    set 4
    unset 5
    jump @begin
@100
    unset 0
    unset 4
    set 5
    jump @begin
@101
    set 0
    unset 4
    set 5
    jump @begin
@110
    unset 0
    set 4
    set 5
    jump @begin
}
